Main movement library:
    (BACK){"$"}
    (FORWARDS){" "}
    (RIGHT){">"}
    (LEFT){"<"}
    (UP){"+"}
    (DOWN){"-"}
    (FULL_BACK){","}
    (FULL_LEFT_BACK){";"}

Block names:
    (forwardsTorch){"f"}
    (backwardsTorch){"r"}
    (block){"b"}
    (air){"a"}

Custom block initialisation:
    (1){
        [forwardsTorch]"=REDSTONE_TORCH_OFF:FORWARDS\n"
        [air]"=AIR\n"
        [block]"=STONE\n"
        [backwardsTorch]"=REDSTONE_TORCH_OFF:BACK\n"
        "|\n"
    }

Bit codes:
    (forwardsOne){
        [forwardsTorch] [BACK]
        (2){[DOWN]}
    }
    (zero){
        [air] [BACK]
        (2){[DOWN]}
    }
    (blockOne){
        [block] [BACK]
        (2){[DOWN]}
    }
    (backwardsOne){
        [backwardsTorch] [BACK]
        (2){[DOWN]}
    }

Bit setters:
    (~forwardsBit){[zero]:[forwardsOne]}
    (~blockBit){[zero]:[blockOne]}
    (~backwardsBit){[zero]:[backwardsOne]}

Word placer:
    (placeWordFront){
        [blockBit]
        [BACK]
        (9){[backwardsBit]}
        [blockBit]
        [FORWARDS]
        [forwardsBit]
        "\n"
        (12){(2){[UP]}} Return top
    }
    (placeWordRear){
        [blockBit]
        [FORWARDS]
        (9){[forwardsBit]}
        [blockBit]
        [BACK]
        [backwardsBit]
        "\n"
        (12){(2){[UP]}} Return top
    }


Seekers:
    (seekNext){
        (4){[RIGHT]}
    }
    (seekPrev){
        (4){[LEFT]}
    }
    (nextLayer){
        (2){[FORWARDS]}
    }
    (hopLeftUnit){
        (8){[LEFT]}
    }
    (hopRightUnit){
        (8){[RIGHT]}
    }
    (hopRearUnit){
        (50){[BACK]}
    }
    (hopFrontUnit){
        (50){[FORWARDS]}
    }

heavier seek commands:
    (carriageReturn){
        (7){[seekPrev]}
        [hopLeftUnit]
        (7){[seekPrev]}
    }
    (nextRegion){
        [carriageReturn]
        [hopFrontUnit]
        [nextLayer]
    }

---------------------------------

MAIN SCRIPT:

(1){
    TODO: navigation to first word!
}

(16){
    (7){
        [placeWordFront]
        [seekNext]
        "\n"
    }
    [placeWordFront]
    [hopRightUnit]
    "\n"
    (7){
        [placeWordFront]
        [seekNext]
        "\n"
    }
    [placeWordFront]
    "\n"
    [carriageReturn]
    [hopRearUnit]
    "\n"
    (7){
        [placeWordRear]
        [seekNext]
        "\n"
    }
    [placeWordRear]
    [hopRightUnit]
    "\n"
    (7){
        [placeWordRear]
        [seekNext]
        "\n"
    }
    [placeWordRear]
    "\n"
    [carriageReturn]
    [hopFrontUnit]
    [nextLayer]
    "\n"
}